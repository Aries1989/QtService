import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable de.skycoder42.QtService 1.2'

Module {
    dependencies: ["QtQml 2.2"]
    Component {
        name: "QIODevice"
        prototype: "QObject"
        Signal { name: "readyRead" }
        Signal {
            name: "channelReadyRead"
            Parameter { name: "channel"; type: "int" }
        }
        Signal {
            name: "bytesWritten"
            Parameter { name: "bytes"; type: "qlonglong" }
        }
        Signal {
            name: "channelBytesWritten"
            Parameter { name: "channel"; type: "int" }
            Parameter { name: "bytes"; type: "qlonglong" }
        }
        Signal { name: "aboutToClose" }
        Signal { name: "readChannelFinished" }
    }
    Component {
        name: "QtService::QmlServiceSingleton"
        prototype: "QObject"
        exports: ["de.skycoder42.QtService/QtService 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Property { name: "service"; type: "QtService::Service"; isReadonly: true; isPointer: true }
        Method {
            name: "createControl"
            type: "QtService::ServiceControl*"
            Parameter { name: "backend"; type: "string" }
            Parameter { name: "serviceId"; type: "string" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "createControl"
            type: "QtService::ServiceControl*"
            Parameter { name: "backend"; type: "string" }
            Parameter { name: "serviceId"; type: "string" }
        }
        Method {
            name: "createControlFromName"
            type: "QtService::ServiceControl*"
            Parameter { name: "backend"; type: "string" }
            Parameter { name: "serviceName"; type: "string" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "createControlFromName"
            type: "QtService::ServiceControl*"
            Parameter { name: "backend"; type: "string" }
            Parameter { name: "serviceName"; type: "string" }
        }
        Method {
            name: "createControlFromName"
            type: "QtService::ServiceControl*"
            Parameter { name: "backend"; type: "string" }
            Parameter { name: "serviceName"; type: "string" }
            Parameter { name: "domain"; type: "string" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "createControlFromName"
            type: "QtService::ServiceControl*"
            Parameter { name: "backend"; type: "string" }
            Parameter { name: "serviceName"; type: "string" }
            Parameter { name: "domain"; type: "string" }
        }
    }
    Component {
        name: "QtService::Service"
        prototype: "QObject"
        exports: ["de.skycoder42.QtService/Service 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "CommandResult"
            values: {
                "OperationCompleted": 0,
                "OperationPending": 1,
                "OperationFailed": 2,
                "OperationExit": 3,
                "Synchronous": 0,
                "Asynchronous": 1
            }
        }
        Enum {
            name: "TerminalMode"
            values: {
                "ReadOnly": 0,
                "WriteOnly": 1,
                "ReadWritePassive": 2,
                "ReadWriteActive": 3
            }
        }
        Property { name: "backend"; type: "string"; isReadonly: true }
        Property { name: "runtimeDir"; type: "QDir"; isReadonly: true }
        Property { name: "terminalActive"; type: "bool" }
        Property { name: "terminalMode"; type: "TerminalMode" }
        Property { name: "globalTerminal"; type: "bool" }
        Property { name: "startWithTerminal"; type: "bool" }
        Signal {
            name: "started"
            Parameter { name: "success"; type: "bool" }
        }
        Signal { name: "started" }
        Signal {
            name: "stopped"
            Parameter { name: "exitCode"; type: "int" }
        }
        Signal { name: "stopped" }
        Signal {
            name: "reloaded"
            Parameter { name: "success"; type: "bool" }
        }
        Signal { name: "reloaded" }
        Signal {
            name: "paused"
            Parameter { name: "success"; type: "bool" }
        }
        Signal { name: "paused" }
        Signal {
            name: "resumed"
            Parameter { name: "success"; type: "bool" }
        }
        Signal { name: "resumed" }
        Signal {
            name: "terminalActiveChanged"
            Parameter { name: "terminalActive"; type: "bool" }
        }
        Signal {
            name: "terminalModeChanged"
            Parameter { name: "terminalMode"; type: "TerminalMode" }
        }
        Signal {
            name: "globalTerminalChanged"
            Parameter { name: "globalTerminal"; type: "bool" }
        }
        Signal {
            name: "startWithTerminalChanged"
            Parameter { name: "startWithTerminal"; type: "bool" }
        }
        Method { name: "quit" }
        Method { name: "reload" }
        Method {
            name: "setTerminalActive"
            Parameter { name: "terminalActive"; type: "bool" }
        }
        Method {
            name: "setTerminalMode"
            Parameter { name: "terminalMode"; type: "TerminalMode" }
        }
        Method {
            name: "setGlobalTerminal"
            Parameter { name: "globalTerminal"; type: "bool" }
        }
        Method {
            name: "setStartWithTerminal"
            Parameter { name: "startWithTerminal"; type: "bool" }
        }
        Method {
            name: "getSockets"
            type: "QList<int>"
            Parameter { name: "socketName"; type: "QByteArray" }
        }
        Method { name: "getSocket"; type: "int" }
    }
    Component {
        name: "QtService::ServiceControl"
        prototype: "QObject"
        exports: ["de.skycoder42.QtService/ServiceControl 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "SupportFlags"
            values: {
                "SupportsStart": 1,
                "SupportsStop": 2,
                "SupportsPause": 4,
                "SupportsResume": 8,
                "SupportsReload": 16,
                "SupportsGetAutostart": 32,
                "SupportsSetAutostart": 64,
                "SupportsBlocking": 128,
                "SupportsNonBlocking": 256,
                "SupportsStatus": 512,
                "SupportsCustomCommands": 1024,
                "SupportsStartStop": 3,
                "SupportsPauseResume": 12,
                "SupportsAutostart": 96,
                "SupportsBlockingNonBlocking": 384
            }
        }
        Enum {
            name: "ServiceStatus"
            values: {
                "ServiceStatusUnknown": 0,
                "ServiceStopped": 1,
                "ServiceStarting": 2,
                "ServiceRunning": 3,
                "ServicePausing": 4,
                "ServicePaused": 5,
                "ServiceResuming": 6,
                "ServiceReloading": 7,
                "ServiceStopping": 8,
                "ServiceErrored": 9
            }
        }
        Property { name: "backend"; type: "string"; isReadonly: true }
        Property { name: "serviceId"; type: "string"; isReadonly: true }
        Property {
            name: "supportFlags"
            type: "QtService::ServiceControl::SupportFlags"
            isReadonly: true
        }
        Property { name: "blocking"; type: "bool" }
        Property { name: "error"; type: "string"; isReadonly: true }
        Signal {
            name: "blockingChanged"
            Parameter { name: "blocking"; type: "bool" }
        }
        Signal {
            name: "errorChanged"
            Parameter { name: "error"; type: "string" }
        }
        Method { name: "start"; type: "bool" }
        Method { name: "stop"; type: "bool" }
        Method { name: "pause"; type: "bool" }
        Method { name: "resume"; type: "bool" }
        Method { name: "reload"; type: "bool" }
        Method { name: "enableAutostart"; type: "bool" }
        Method { name: "disableAutostart"; type: "bool" }
        Method {
            name: "setBlocking"
            Parameter { name: "blocking"; type: "bool" }
        }
        Method { name: "clearError" }
        Method {
            name: "callGenericCommand"
            type: "QVariant"
            Parameter { name: "kind"; type: "QByteArray" }
            Parameter { name: "args"; type: "QVariantList" }
        }
        Method {
            name: "callGenericCommand"
            type: "QVariant"
            Parameter { name: "kind"; type: "QByteArray" }
        }
        Method { name: "serviceExists"; type: "bool" }
        Method { name: "status"; type: "QtService::ServiceControl::ServiceStatus" }
        Method { name: "isAutostartEnabled"; type: "bool" }
        Method { name: "runtimeDir"; type: "QDir" }
    }
    Component {
        name: "QtService::Terminal"
        prototype: "QIODevice"
        exports: ["de.skycoder42.QtService/Terminal 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "terminalMode"; type: "QtService::Service::TerminalMode"; isReadonly: true }
        Property { name: "command"; type: "QStringList"; isReadonly: true }
        Property { name: "command2"; revision: 2; type: "QStringList"; isReadonly: true }
        Property { name: "autoDelete"; type: "bool" }
        Signal { name: "terminalDisconnected" }
        Signal {
            name: "terminalError"
            Parameter { name: "errorCode"; type: "int" }
        }
        Signal {
            name: "autoDeleteChanged"
            Parameter { name: "autoDelete"; type: "bool" }
        }
        Method { name: "disconnectTerminal" }
        Method { name: "requestChar" }
        Method {
            name: "requestChars"
            Parameter { name: "num"; type: "qlonglong" }
        }
        Method { name: "requestLine" }
        Method {
            name: "writeLine"
            Parameter { name: "line"; type: "QByteArray" }
            Parameter { name: "flush"; type: "bool" }
        }
        Method {
            name: "writeLine"
            Parameter { name: "line"; type: "QByteArray" }
        }
        Method { name: "flush" }
        Method {
            name: "setAutoDelete"
            Parameter { name: "autoDelete"; type: "bool" }
        }
    }
}
